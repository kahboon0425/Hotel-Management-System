/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Admin;

import Student.BookingFunction;
import Student.BookingStatus;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class ReviewNewApplication extends javax.swing.JFrame {

    /**
     * Creates new form ManageHostelApplication
     */
    public static DefaultTableModel model;
    public static String user;

    public ReviewNewApplication() {
        initComponents();
        model = (DefaultTableModel) studentHostelApplicationTable.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rejectButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bookingDate = new javax.swing.JTextField();
        emailTF = new javax.swing.JTextField();
        phoneNoTF = new javax.swing.JTextField();
        nameTF = new javax.swing.JTextField();
        roomcatTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tenancyDurationTF = new javax.swing.JTextField();
        checkInDateTF = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentHostelApplicationTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        checkoutDateTF = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        approveButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        studentIDTF = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        genderTF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        TotalFeeTF = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        bookingID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Room Category:");

        rejectButton.setBackground(new java.awt.Color(0, 153, 153));
        rejectButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rejectButton.setForeground(new java.awt.Color(255, 255, 255));
        rejectButton.setText("REJECT");
        rejectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setText("Email: ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Name:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("Student ID:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 153));
        jLabel6.setText("Phone No:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setText("Gender:");

        bookingDate.setPreferredSize(new java.awt.Dimension(70, 30));

        emailTF.setPreferredSize(new java.awt.Dimension(70, 30));

        phoneNoTF.setPreferredSize(new java.awt.Dimension(70, 30));

        nameTF.setPreferredSize(new java.awt.Dimension(70, 30));
        nameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTFActionPerformed(evt);
            }
        });

        roomcatTF.setMinimumSize(new java.awt.Dimension(64, 30));
        roomcatTF.setPreferredSize(new java.awt.Dimension(70, 30));
        roomcatTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomcatTFActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 153, 153));
        jLabel10.setText("Tenancy Period:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 153));
        jLabel11.setText("Tenancy Duration:");

        jLabel14.setFont(new java.awt.Font("Segoe UI Black", 0, 30)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 102, 102));
        jLabel14.setText("Student Booking");

        tenancyDurationTF.setPreferredSize(new java.awt.Dimension(70, 30));
        tenancyDurationTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenancyDurationTFActionPerformed(evt);
            }
        });

        checkInDateTF.setPreferredSize(new java.awt.Dimension(70, 30));
        checkInDateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInDateTFActionPerformed(evt);
            }
        });

        studentHostelApplicationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking ID", "Booking Date", "Student TP"
            }
        ));
        studentHostelApplicationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentHostelApplicationTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(studentHostelApplicationTable);

        checkoutDateTF.setPreferredSize(new java.awt.Dimension(70, 30));
        checkoutDateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutDateTFActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 153, 153));
        jLabel13.setText("TO");

        approveButton.setBackground(new java.awt.Color(0, 153, 153));
        approveButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        approveButton.setForeground(new java.awt.Color(255, 255, 255));
        approveButton.setText("APPROVED");
        approveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveButtonActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 153));
        jLabel16.setText("Student Hostel Application");

        studentIDTF.setPreferredSize(new java.awt.Dimension(70, 30));
        studentIDTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIDTFActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 153, 153));
        jLabel15.setText("BookingDate:");

        genderTF.setPreferredSize(new java.awt.Dimension(70, 30));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 153));
        jLabel17.setText("TotalFees:");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 153));
        jLabel18.setText("Booking ID:");

        bookingID.setPreferredSize(new java.awt.Dimension(70, 30));
        bookingID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(nameTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                                    .addComponent(studentIDTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bookingDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(roomcatTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(checkInDateTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                    .addComponent(TotalFeeTF, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(79, 79, 79)
                                                .addComponent(jLabel6)
                                                .addGap(18, 18, 18))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(8, 8, 8))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(genderTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(phoneNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tenancyDurationTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(jLabel13)
                                        .addGap(44, 44, 44)
                                        .addComponent(checkoutDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bookingID, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(15, 15, 15))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160)
                        .addComponent(jLabel14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jLabel16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rejectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(approveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(studentIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(bookingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(genderTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(phoneNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(roomcatTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tenancyDurationTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkInDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addComponent(checkoutDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(TotalFeeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(bookingID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rejectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(approveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTFActionPerformed

    private void roomcatTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomcatTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomcatTFActionPerformed

    private void tenancyDurationTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenancyDurationTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenancyDurationTFActionPerformed

    private void checkInDateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInDateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkInDateTFActionPerformed

    private void checkoutDateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutDateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutDateTFActionPerformed

    private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveButtonActionPerformed
        // TODO add your handling code here:
        if (studentHostelApplicationTable.getSelectedRowCount() == 1) {

            String roomCategory = roomcatTF.getText();
            Object[] roomNumber = BookingFunction.readRoomInfo("RoomID.txt");
            List<String> availableRooms = new ArrayList<>();
            for (int x = 0; x < roomNumber.length; x++) {
                String[] data = roomNumber[x].toString().split(",");
                if (roomCategory.equals(data[1])) {
                    availableRooms.add(data[0]); // add room number to available rooms list
                }
            }

            if (availableRooms.size() > 0) {
                // randomly select a room number from available rooms
                Random random = new Random();
                int randomIndex = random.nextInt(availableRooms.size());
                String assignedRoomNumber = availableRooms.get(randomIndex);
                System.out.println(assignedRoomNumber);

                // remove assigned room number from the list of available rooms
                availableRooms.remove(randomIndex);

                // write updated list of room numbers to file
                try {
                    FileWriter fw = new FileWriter("RoomID.txt");
                    for (int i = 0; i < roomNumber.length; i++) {
                        String[] data = roomNumber[i].toString().split(",");
                        if (!data[0].equals(assignedRoomNumber)) {
                            fw.write(roomNumber[i].toString() + "\n");
                        }
                    }
                    fw.close();
                } catch (IOException ex) {
                    System.out.println("Error writing to file");
                }

                // assign room number to user
                System.out.println(assignedRoomNumber);
                String approveORreject = bookingID.getText() + "," + bookingDate.getText() + "," + emailTF.getText()
                        + "," + nameTF.getText() + "," + phoneNoTF.getText()
                        + "," + studentIDTF.getText() + "," + genderTF.getText()
                        + "," + roomcatTF.getText()
                        + "," + checkInDateTF.getText()
                        + "," + tenancyDurationTF.getText() + "," + checkoutDateTF.getText()
                        + "," + TotalFeeTF.getText()
                        + "," + "Approved" + "," + user + "," + assignedRoomNumber + "," + "Unpaid";

                BookingFunction bookingFunction = new BookingFunction();
                bookingFunction.write(approveORreject, "ApprovedHostelApplication.txt");

                /////
                RoomInformation.update("AllStudentBooking.txt", bookingID.getText(), "Approved", assignedRoomNumber, "Unpaid");

                //////
                RoomInformation roomInformation = new RoomInformation();
                roomInformation.update("RoomAvailable.txt", roomcatTF.getText());
                JOptionPane.showMessageDialog(rootPane, "Application Accepted!");
//            RoomInformation.displayUpdatedBookingStatus(BookingStatus.model, "ApprovedHostelApplication.txt");
            }

            model.removeRow(studentHostelApplicationTable.getSelectedRow());
            studentIDTF.setText("");
            bookingDate.setText("");
            genderTF.setText("");
            emailTF.setText("");
            phoneNoTF.setText("");
            nameTF.setText("");
            roomcatTF.setText("");
            checkInDateTF.setText("");
            checkoutDateTF.setText("");
            tenancyDurationTF.setText("");
            TotalFeeTF.setText("");
            bookingID.setText("");

            int rowCount = model.getRowCount();
            ArrayList<Object> myList = new ArrayList<Object>(); // create a new ArrayList
            for (int i = 0; i < rowCount; i++) {
                String studentTP = model.getValueAt(i, 2).toString();
                Object[] bookingData = BookingFunction.readRoomInfo("studentBookingDetails.txt");

                for (int x = 0; x < bookingData.length; x++) {
                    String[] data = bookingData[x].toString().split(",");
                    if (studentTP.equals(data[5])) {
                        String bookingDataString = String.join(",", data); // Join the array elements with a comma delimiter
                        myList.add(bookingDataString);
                    }
                }
            }
            Object[] pendingList = myList.toArray(); // Convert the ArrayList to an array
            RoomInformation.writeBookingInfo(pendingList, "studentBookingDetails.txt");
        } else {
            if (studentHostelApplicationTable.getRowCount() == 0) {
                // if table is empty (no data) then display message
                JOptionPane.showMessageDialog(rootPane, "The Table is Empty!");
            } else {
                // if table is not empty but row is not selected or multiple row is selected
                JOptionPane.showMessageDialog(rootPane, "Please select the row you want to approve!");
            }
        }
    }//GEN-LAST:event_approveButtonActionPerformed

    private void studentHostelApplicationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentHostelApplicationTableMouseClicked
        // TODO add your handling code here:
        Object[] bookingData = BookingFunction.readRoomInfo("studentBookingDetails.txt");
        int index = studentHostelApplicationTable.getSelectedRow();
        // Get value from JTable
        String userBookingID = model.getValueAt(index, 0).toString();

        for (int i = 0; i < bookingData.length; i++) {
            String[] data = bookingData[i].toString().split(",");
            if (userBookingID.equals(data[0])) {
                bookingID.setText(data[0]);
                bookingDate.setText(data[1]);
                studentIDTF.setText(data[5]);
                genderTF.setText(data[6]);
                emailTF.setText(data[2]);
                phoneNoTF.setText(data[4]);
                nameTF.setText(data[3]);
                roomcatTF.setText(data[7]);
                checkInDateTF.setText(data[8]);
                checkoutDateTF.setText(data[10]);
                tenancyDurationTF.setText(data[9]);
                TotalFeeTF.setText(data[11]);
                user = data[13];

                bookingID.setEditable(false);
                bookingDate.setEditable(false);
                studentIDTF.setEditable(false);
                genderTF.setEditable(false);
                emailTF.setEditable(false);
                phoneNoTF.setEditable(false);
                nameTF.setEditable(false);
                roomcatTF.setEditable(false);
                checkInDateTF.setEditable(false);
                checkoutDateTF.setEditable(false);
                tenancyDurationTF.setEditable(false);
                TotalFeeTF.setEditable(false);

            }

        }


    }//GEN-LAST:event_studentHostelApplicationTableMouseClicked

    private void studentIDTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIDTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIDTFActionPerformed

    private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectButtonActionPerformed
        // TODO add your handling code here:
        if (studentHostelApplicationTable.getSelectedRowCount() == 1) {

            String approveORreject = bookingID.getText() + "," + bookingDate.getText() + "," + emailTF.getText()
                    + "," + nameTF.getText() + "," + phoneNoTF.getText()
                    + "," + studentIDTF.getText() + "," + genderTF.getText()
                    + "," + roomcatTF.getText()
                    + "," + checkInDateTF.getText()
                    + "," + tenancyDurationTF.getText() + "," + checkoutDateTF.getText()
                    + "," + TotalFeeTF.getText()
                    + "," + "Rejected" + "," + user + "," + "-";

            BookingFunction bookingFunction = new BookingFunction();
            bookingFunction.write(approveORreject, "RejectedHostelApplication.txt");
            /////
            RoomInformation.update("AllStudentBooking.txt", bookingID.getText(), "Rejected", "-", "-");

            JOptionPane.showMessageDialog(rootPane, "Application Rejected!");
//        RoomInformation.displayUpdatedBookingStatus(BookingStatus.model, "RejectedHostelApplication.txt");
            model.removeRow(studentHostelApplicationTable.getSelectedRow());

            bookingDate.setText("");
            emailTF.setText("");
            nameTF.setText("");
            phoneNoTF.setText("");
            studentIDTF.setText("");
            genderTF.setText("");
            roomcatTF.setText("");
            checkInDateTF.setText("");
            checkoutDateTF.setText("");
            tenancyDurationTF.setText("");
            TotalFeeTF.setText("");
            bookingID.setText("");

            int rowCount = model.getRowCount();
            ArrayList<Object> myList = new ArrayList<Object>(); // create a new ArrayList
            for (int i = 0; i < rowCount; i++) {
                String studentTP = model.getValueAt(i, 2).toString();
                Object[] bookingData = BookingFunction.readRoomInfo("studentBookingDetails.txt");

                for (int x = 0; x < bookingData.length; x++) {
                    String[] data = bookingData[x].toString().split(",");
                    if (studentTP.equals(data[5])) {
                        String bookingDataString = String.join(",", data); // Join the array elements with a comma delimiter
                        myList.add(bookingDataString);
                    }
                }
            }
            Object[] pendingList = myList.toArray(); // Convert the ArrayList to an array
            RoomInformation.writeBookingInfo(pendingList, "studentBookingDetails.txt");
        } else {
            if (studentHostelApplicationTable.getRowCount() == 0) {
                // if table is empty (no data) then display message
                JOptionPane.showMessageDialog(rootPane, "The Table is Empty!");
            } else {
                // if table is not empty but row is not selected or multiple row is selected
                JOptionPane.showMessageDialog(rootPane, "Please select the row you want to reject!");
            }
        }
//        RoomInformation roomInfo = new RoomInformation();
//        roomInfo.write(model, "studentBookingDetails.txt");
    }//GEN-LAST:event_rejectButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        ManageStudentApplicationMenu manageApplicationMenu = new ManageStudentApplicationMenu();
        manageApplicationMenu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void bookingIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingIDActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TotalFeeTF;
    private javax.swing.JButton approveButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField bookingDate;
    private javax.swing.JTextField bookingID;
    private javax.swing.JTextField checkInDateTF;
    private javax.swing.JTextField checkoutDateTF;
    private javax.swing.JTextField emailTF;
    private javax.swing.JTextField genderTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTextField phoneNoTF;
    private javax.swing.JButton rejectButton;
    private javax.swing.JTextField roomcatTF;
    private javax.swing.JTable studentHostelApplicationTable;
    private javax.swing.JTextField studentIDTF;
    private javax.swing.JTextField tenancyDurationTF;
    // End of variables declaration//GEN-END:variables
}
